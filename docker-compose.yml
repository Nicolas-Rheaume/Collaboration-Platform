# docker ps
# docker image ls
# docker-compose up
# docker-compose down
# docker rmi $(docker images -a -q)
# docker rmi $(docker images -q) -f

version: '3'  # Specifies the docker-compose version

# define the services/containers to be run
services:
  
  # Angular Client App
  client:
    container_name: angular-client
    build: ./client
    restart: unless-stopped
    ports:
      - '${CLIENT_PORT}:4200'
    expose:
      - 4200
    links:
      - server
    #volumes:
    #  - client-data:/var/lib/client
    
  # Node.js Server App
  server:
    container_name: nodejs-server
    build: ./server
    # working_dir: /usr/src/server
    restart: unless-stopped
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    links:
      - db
    #volumes:
    #  - server-data:/var/lib/server
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - HOST_IP_ADDRESS=${IP_ADDRESS}
      - MYSQL_PORT=${DB_PORT}
      - MYSQL_USER=${DB_USER}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}

  # MySQL Database
  db:
    container_name: mysql-db
    image: mysql:5.7
    #working_dir: /usr/src/mysql
    restart: always
    environment:
        MYSQL_USER: ${DB_USER}
        MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_DATABASE: ${DB_DATABASE}
    ports:
        - '${DB_PORT}:3306'
    volumes:
        - db-data:/var/lib/mysql


# Names our volume
volumes:
  db-data:
  #client-data:
  #server-data:
